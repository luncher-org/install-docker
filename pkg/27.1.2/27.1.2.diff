--- 27.1.2.orig.sh	2024-09-11 00:55:46.538630995 +0000
+++ 27.1.2.sh	2024-09-11 00:55:46.542631028 +0000
@@ -82,26 +82,34 @@
 # the script was uploaded (Should only be modified by upload job):
 SCRIPT_COMMIT_SHA="0d6f72e671ba87f7aa4c6991646a1a5b9f9dae84"
 
-# strip "v" prefix if present
-VERSION="${VERSION#v}"
+CHANNEL="stable"
+DOWNLOAD_URL="https://download.docker.com"
+REPO_FILE="docker-ce.repo"
+VERSION="27.1.2"
+DIND_TEST_WAIT=${DIND_TEST_WAIT:-3s}  # Wait time until docker start at dind test env
+
+# Issue https://github.com/rancher/rancher/issues/29246
+adjust_repo_releasever() {
+	DOWNLOAD_URL="https://download.docker.com"
+	case $1 in
+	8*)
+		releasever=8
+		;;
+	9*)
+		releasever=9
+		;;
+	*)
+		# fedora, or unsupported
+		return
+		;;
+	esac
 
-# The channel to install from:
-#   * stable
-#   * test
-DEFAULT_CHANNEL_VALUE="stable"
-if [ -z "$CHANNEL" ]; then
-	CHANNEL=$DEFAULT_CHANNEL_VALUE
-fi
-
-DEFAULT_DOWNLOAD_URL="https://download.docker.com"
-if [ -z "$DOWNLOAD_URL" ]; then
-	DOWNLOAD_URL=$DEFAULT_DOWNLOAD_URL
-fi
-
-DEFAULT_REPO_FILE="docker-ce.repo"
-if [ -z "$REPO_FILE" ]; then
-	REPO_FILE="$DEFAULT_REPO_FILE"
-fi
+	for channel in "stable" "test" "nightly"; do
+		$sh_c "$config_manager --setopt=docker-ce-${channel}.baseurl=${DOWNLOAD_URL}/linux/rhel/${releasever}/\\\$basearch/${channel} --save";
+		$sh_c "$config_manager --setopt=docker-ce-${channel}-debuginfo.baseurl=${DOWNLOAD_URL}/linux/rhel/${releasever}/debug-\\\$basearch/${channel} --save";
+		$sh_c "$config_manager --setopt=docker-ce-${channel}-source.baseurl=${DOWNLOAD_URL}/linux/rhel/${releasever}/source/${channel} --save";
+	done
+}
 
 mirror=''
 DRY_RUN=${DRY_RUN:-}
@@ -147,12 +155,29 @@
 case "$CHANNEL" in
 	stable|test)
 		;;
+	edge|nightly)
+		>&2 echo "DEPRECATED: the $CHANNEL channel has been deprecated and is no longer supported by this script."
+		exit 1
+		;;
 	*)
 		>&2 echo "unknown CHANNEL '$CHANNEL': use either stable or test."
 		exit 1
 		;;
 esac
 
+start_docker() {
+	if [ ! -z $DIND_TEST ]; then
+		# Starting dockerd manually due to dind env is not using systemd
+		dockerd &
+		sleep $DIND_TEST_WAIT
+	elif [ -d '/run/systemd/system' ] ; then
+		$sh_c 'systemctl start docker'
+	else
+		$sh_c 'service docker start'
+	fi
+}
+
+
 command_exists() {
 	command -v "$@" > /dev/null 2>&1
 }
@@ -173,7 +198,7 @@
 	if [ -z "$VERSION" ]; then
 			return 0
 	fi
-	version_compare "$VERSION" "$1"
+	eval version_compare "$VERSION" "$1"
 }
 
 # version_compare compares two version strings (either SemVer (Major.Minor.Path),
@@ -444,10 +469,17 @@
 			esac
 		;;
 
-		centos|rhel)
+		centos|rhel|sles|rocky)
 			if [ -z "$dist_version" ] && [ -r /etc/os-release ]; then
 				dist_version="$(. /etc/os-release && echo "$VERSION_ID")"
 			fi
+	
+		;;
+
+		oracleserver|ol)
+			lsb_dist="ol"
+			# need to switch lsb_dist to match yum repo URL
+			dist_version="$(rpm -q --whatprovides redhat-release --queryformat "%{VERSION}\n" | sed 's/\/.*//' | sed 's/\..*//' | sed 's/Server*//')"
 		;;
 
 		*)
@@ -547,11 +579,12 @@
 					set -x
 				fi
 				$sh_c "DEBIAN_FRONTEND=noninteractive apt-get install -y -qq $pkgs >/dev/null"
+				start_docker
 			)
 			echo_docker_as_nonroot
 			exit 0
 			;;
-		centos|fedora|rhel)
+		centos|fedora|rhel|ol|rocky)
 			if command_exists dnf; then
 				pkg_manager="dnf"
 				pkg_manager_flags="--best"
@@ -574,6 +607,9 @@
 				pkg_suffix="el"
 			fi
 			repo_file_url="$DOWNLOAD_URL/linux/$lsb_dist/$REPO_FILE"
+			if [ "$lsb_dist" = "ol" ] || [ "$lsb_dist" = "rocky" ] || [ "$lsb_dist" = "rhel" ]; then
+				repo_file_url="$DOWNLOAD_URL/linux/rhel/$REPO_FILE"
+			fi
 			(
 				if ! is_dry_run; then
 					set -x
@@ -641,6 +677,11 @@
 				echo "Packages for SLES are currently only available for s390x"
 				exit 1
 			fi
+			if [ "$dist_version" = "15.3" ]; then
+				sles_version="SLE_15_SP3"
+			else
+				sles_version="SLE_15_SP2"
+			fi
 			repo_file_url="$DOWNLOAD_URL/linux/$lsb_dist/$REPO_FILE"
 			pre_reqs="ca-certificates curl libseccomp2 awk"
 			(
@@ -705,10 +746,25 @@
 					set -x
 				fi
 				$sh_c "zypper -q install -y $pkgs"
+				if ! command_exists iptables; then
+				    $sh_c "$pkg_manager install -y -q iptables"
+				fi
+                		start_docker
 			)
 			echo_docker_as_nonroot
 			exit 0
 			;;
+                rancheros)
+                        (
+                        set -x
+                        $sh_c "sleep 3;ros engine list --update"
+                        engine_version="$(sudo ros engine list | awk '{print $2}' | grep ${docker_version} | tail -n 1)"
+                        if [ "$engine_version" != "" ]; then
+                                $sh_c "ros engine switch -f $engine_version"
+                        fi
+                        )
+                        exit 0
+                        ;;
 		*)
 			if [ -z "$lsb_dist" ]; then
 				if is_darwin; then
